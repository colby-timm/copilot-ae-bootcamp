name: Create Session Branch
on:
  workflow_dispatch:
    inputs:
      session_number:
        description: 'Session to start (1-6)'
        required: true
        type: choice
        options: ['1', '2', '3', '4', '5', '6']
        default: '1'
      force_recreate:
        description: 'Force recreate if branch exists'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

jobs:
  create_session:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check if session branch exists
        id: check_branch
        run: |
          if git show-ref --verify --quiet refs/remotes/origin/session${{ inputs.session_number }}; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
            echo "Branch session${{ inputs.session_number }} already exists"
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "Branch session${{ inputs.session_number }} does not exist"
          fi

      - name: Handle existing branch
        if: steps.check_branch.outputs.branch_exists == 'true' && inputs.force_recreate == false
        run: |
          echo "::error::Branch session${{ inputs.session_number }} already exists. Use force_recreate option to overwrite."
          exit 1

      - name: Delete existing branch if force recreate
        if: steps.check_branch.outputs.branch_exists == 'true' && inputs.force_recreate == true
        run: |
          git push origin --delete session${{ inputs.session_number }} || true
          echo "Deleted existing branch session${{ inputs.session_number }}"

      - name: Validate session directory exists
        run: |
          if [ ! -d "sessions/session${{ inputs.session_number }}" ]; then
            echo "::error::Session directory sessions/session${{ inputs.session_number }} not found"
            exit 1
          fi
          echo "✅ Session ${{ inputs.session_number }} directory found"

      - name: Create session branch and copy files
        run: |
          SESSION_NUM=${{ inputs.session_number }}
          BRANCH_NAME="session${SESSION_NUM}"

          # Create new orphan branch (clean history)
          git checkout --orphan $BRANCH_NAME

          # Remove all files from working directory
          git rm -rf . 2>/dev/null || true

          # Copy session files to root, preserving structure
          if [ -d "sessions/session${SESSION_NUM}" ]; then
            # Copy all session files to root, including hidden files
            cp -r sessions/session${SESSION_NUM}/. . 2>/dev/null || true

            # Ensure .github directory is properly copied
            if [ -d "sessions/session${SESSION_NUM}/.github" ]; then
              mkdir -p .github
              cp -r sessions/session${SESSION_NUM}/.github/. .github/ 2>/dev/null || true
            fi

            # Create initial commit
            git add .
            git commit -m "Initialize Session ${SESSION_NUM} environment

          Session: session${SESSION_NUM}
          Started by: ${{ github.actor }}
          Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"

            # Push the branch
            git push origin $BRANCH_NAME

            echo "Session ${SESSION_NUM} branch created successfully"
          else
            echo "Session ${SESSION_NUM} directory not found"
            exit 1
          fi

      - name: Switch to session branch for issue creation
        run: |
          SESSION_NUM=${{ inputs.session_number }}
          git checkout session${SESSION_NUM}

      - name: Create session issue
        run: |
          SESSION_NUM=${{ inputs.session_number }}

          # Create the initial issue for this session
          gh issue create
            --title "🚀 Welcome to Session ${SESSION_NUM}!"
            --body "This issue will guide you through Session ${SESSION_NUM} of the AI Coding Assistant Enablement Bootcamp.

          The session has been initialized on the `session${SESSION_NUM}` branch.

          **Next Steps:**
          1. Switch to the `session${SESSION_NUM}` branch
          2. Follow the automated workflow instructions
          3. Complete each step as guided by the issue updates

          Let's get started! 🎯"
            --label "session-${SESSION_NUM}"
            --label "bootcamp"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure session environment
        run: |
          # Create session-specific environment file
          cat > .env << EOF
          SESSION_NUMBER=${{ inputs.session_number }}
          SESSION_BRANCH=session${{ inputs.session_number }}
          MAIN_REPO=${{ github.repository }}
          CREATED_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          CREATED_BY=${{ github.actor }}
          EOF

          echo "✅ Session environment configured"

      - name: Update workflow files for session context
        run: |
          # Update any placeholder variables in workflows
          find .github/workflows -name "*.yml" -type f -exec sed -i.bak \
            -e "s/{{session-number}}/${{ inputs.session_number }}/g" \
            -e "s/{{repo-name}}/${{ github.repository }}/g" \
            -e "s/{{username}}/${{ github.actor }}/g" {} \;

          # Clean up backup files
          find .github/workflows -name "*.bak" -delete || true

          echo "✅ Workflow files updated with session context"

      - name: Update step files for session context
        run: |
          # Update any placeholder variables in step files
          find .github/steps -name "*.md" -type f -exec sed -i.bak \
            -e "s/{{session-number}}/${{ inputs.session_number }}/g" \
            -e "s/{{repo-name}}/${{ github.repository }}/g" \
            -e "s/{{username}}/${{ github.actor }}/g" {} \;

          # Clean up backup files
          find .github/steps -name "*.bak" -delete || true

          echo "✅ Step files updated with session context"

      - name: Add session metadata
        run: |
          # Create session info file
          cat > SESSION_INFO.md << EOF
          # Session ${{ inputs.session_number }} Information

          - **Session Number**: ${{ inputs.session_number }}
          - **Created**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - **Created By**: ${{ github.actor }}
          - **Repository**: ${{ github.repository }}
          - **Branch**: session${{ inputs.session_number }}

          ## Navigation

          - [🏠 Course Home](https://github.com/${{ github.repository }}/tree/main)
          - [📋 All Sessions](https://github.com/${{ github.repository }}/tree/main#-choose-your-session)
          - [🔄 Restart This Session](https://github.com/${{ github.repository }}/actions/workflows/create-session.yml)

          ## Getting Started

          This session branch contains all the files and workflows needed for Session ${{ inputs.session_number }}.
          Follow the GitHub Issue that will be created to complete this session step by step.
          EOF

          echo "✅ Session metadata added"

      - name: Commit session files
        run: |
          git add .
          git commit -m "Initialize Session ${{ inputs.session_number }} - Clean starting state

          - Session files copied from sessions/session${{ inputs.session_number }}
          - Workflows configured for session context
          - Step files updated with session variables
          - Created by: ${{ github.actor }}
          - Created at: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"

      - name: Push session branch
        run: |
          git push origin session${{ inputs.session_number }}
          echo "✅ Session branch pushed to origin"

      - name: Disable all workflows initially
        run: |
          # We'll enable the start workflow after issue creation
          for workflow_file in .github/workflows/*.yml; do
            if [ -f "$workflow_file" ]; then
              workflow_name=$(grep "^name:" "$workflow_file" | head -1 | sed 's/name: *//' | sed 's/ *#.*//')
              if [ ! -z "$workflow_name" ]; then
                echo "Disabling workflow: $workflow_name"
                gh workflow disable "$workflow_name" || echo "Could not disable $workflow_name (may not exist yet)"
              fi
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create session start issue
        id: create_issue
        run: |
          # Determine the welcome/start step file
          START_STEP_FILE=""
          if [ -f ".github/steps/${{ inputs.session_number }}-welcome.md" ]; then
            START_STEP_FILE=".github/steps/${{ inputs.session_number }}-welcome.md"
          elif [ -f ".github/steps/${{ inputs.session_number }}-1.md" ]; then
            START_STEP_FILE=".github/steps/${{ inputs.session_number }}-1.md"
          elif [ -f ".github/steps/welcome.md" ]; then
            START_STEP_FILE=".github/steps/welcome.md"
          else
            echo "::warning::No welcome or start step file found, creating basic issue"
          fi

          if [ ! -z "$START_STEP_FILE" ] && [ -f "$START_STEP_FILE" ]; then
            # Create issue with step content
            ISSUE_URL=$(gh issue create \
              --title "🚀 Welcome to Session ${{ inputs.session_number }}!" \
              --body-file "$START_STEP_FILE" \
              --label "session-${{ inputs.session_number }}" \
              --label "in-progress")
          else
            # Create basic issue
            ISSUE_URL=$(gh issue create \
              --title "🚀 Welcome to Session ${{ inputs.session_number }}!" \
              --body "Welcome to Session ${{ inputs.session_number }}! This session has been initialized and you're ready to begin. Check the workflows in this repository to get started with the learning activities." \
              --label "session-${{ inputs.session_number }}" \
              --label "in-progress")
          fi

          echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT
          echo "✅ Session start issue created: $ISSUE_URL"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable start workflow
        run: |
          # Enable the session start workflow
          START_WORKFLOW_NAME=""
          if [ -f ".github/workflows/${{ inputs.session_number }}-0-start.yml" ]; then
            START_WORKFLOW_NAME=$(grep "^name:" ".github/workflows/${{ inputs.session_number }}-0-start.yml" | head -1 | sed 's/name: *//')
          elif [ -f ".github/workflows/${{ inputs.session_number }}-start.yml" ]; then
            START_WORKFLOW_NAME=$(grep "^name:" ".github/workflows/${{ inputs.session_number }}-start.yml" | head -1 | sed 's/name: *//')
          fi

          if [ ! -z "$START_WORKFLOW_NAME" ]; then
            echo "Enabling start workflow: $START_WORKFLOW_NAME"
            gh workflow enable "$START_WORKFLOW_NAME" || echo "Could not enable $START_WORKFLOW_NAME"
          else
            echo "::warning::No start workflow found to enable"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add success comment to issue
        run: |
          gh issue comment "${{ steps.create_issue.outputs.issue_url }}" \
            --body "🎉 **Session ${{ inputs.session_number }} Successfully Initialized!**

          Your learning environment is ready. Here's what was set up for you:

          - ✅ Clean session branch created: \`session${{ inputs.session_number }}\`
          - ✅ All session files copied and configured
          - ✅ Workflows prepared for step-by-step progression
          - ✅ Starting state guaranteed and consistent

          ## Next Steps

          1. Make sure you're on the \`session${{ inputs.session_number }}\` branch
          2. Follow the instructions in this issue to complete the session
          3. Watch for automated progression as you complete each step

          ## Need Help?

          - 🏠 [Return to Course Home](https://github.com/${{ github.repository }}/tree/main)
          - 🔄 [Restart This Session](https://github.com/${{ github.repository }}/actions/workflows/create-session.yml)
          - 📚 [View All Sessions](https://github.com/${{ github.repository }}/tree/main#-choose-your-session)

          Happy learning! 🚀"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update main branch progress
        run: |
          # Switch back to main to update progress
          git checkout main

          # Update README or progress file (if you have one)
          # This could update a progress tracking section
          echo "Session ${{ inputs.session_number }} initialized at $(date -u +"%Y-%m-%dT%H:%M:%SZ") by ${{ github.actor }}" >> .session-history

          git add .session-history
          git commit -m "Track session ${{ inputs.session_number }} initialization" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  summary:
    needs: create_session
    runs-on: ubuntu-latest
    steps:
      - name: Session Creation Summary
        run: |
          echo "## 🎉 Session ${{ inputs.session_number }} Created Successfully!"
          echo ""
          echo "**Branch**: session${{ inputs.session_number }}"
          echo "**Status**: Ready for learning"
          echo "**Next Step**: Follow the GitHub Issue for step-by-step instructions"
          echo ""
          echo "### Quick Links:"
          echo "- [Switch to Session Branch](https://github.com/${{ github.repository }}/tree/session${{ inputs.session_number }})"
          echo "- [View Session Issue](https://github.com/${{ github.repository }}/issues)"
          echo "- [Course Home](https://github.com/${{ github.repository }})"
