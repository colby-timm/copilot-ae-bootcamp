name: Step 2-0 # Start Exercise

on:
  push:
    branches:
      - session2
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  issues: write

env:
  STEP_2_FILE: ".github/steps/2-1-add-requirements-context.md"

jobs:
  setup_session_environment:
    name: Setup Session Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout session branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Session 2
        uses: ./.github/actions/setup-session
        with:
          session_number: '2'

  start_exercise:
    if: |
      !github.event.repository.is_template
    name: Start Exercise
    needs: [setup_session_environment]
    uses: skills/exercise-toolkit/.github/workflows/start-exercise.yml@v0.4.0
    with:
      exercise-title: "AI Coding Assistant Enablement Bootcamp Session 2"
      intro-message: "Welcome to the AI Coding Assistant Enablement Bootcamp Session 2! ðŸš€ This guided experience will take you through the creation of context documents that will enable Copilot to build an application tailored to your needs. Get ready to experience the power of AI-assisted coding in a cloud development environment! ðŸ’»âœ¨"

  post_next_step_content:
    name: Post next step content
    runs-on: ubuntu-latest
    needs: [start_exercise]
    env:
      ISSUE_URL: ${{ needs.start_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Build comment - add step content
        id: build-comment
        uses: skills/action-text-variables@v3
        with:
          template-file: ${{ env.STEP_2_FILE }}
          template-vars: |
            login: ${{ github.actor }}
            full_repo_name: ${{ github.repository }}

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-comment.outputs.updated-text }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable all workflows
        run: |
          # Find all workflow files and extract their names
          for workflow_file in .github/workflows/*.yml; do
            # Extract the workflow name from the file
            workflow_name=$(grep "^name:" "$workflow_file" | head -1 | sed 's/name: *//' | sed 's/ *#.*//')
            echo "Extracted workflow name: '$workflow_name' from file: $workflow_file"

            # Skip Step 2-0 (current workflow) to avoid disabling itself
            if [[ "$workflow_name" != "Step 2-0" ]]; then
              echo "Disabling workflow: $workflow_name"
              gh workflow disable "$workflow_name" || echo "Failed to disable $workflow_name or it's already disabled"
            fi
          done

      - name: Enable next workflow
        run: |
          gh workflow enable "Step 2-1"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}